import 'dart:io';
import 'package:path/path.dart';
import 'package:path_provider/path_provider.dart';
import 'package:sqflite/sqflite.dart';

import '../../data/shared_preferences/spref_app_model.dart';
import '../../network/app_injection.dart';
import 'table_constants.dart';

class DbProvider {
  DbProvider._();

  static final DbProvider db = DbProvider._();
  static Database? _database;

  Future<Database?> get database async {
    if (_database != null) return _database;
    await initDatabase();
    return _database;
  }


  Future initDatabase() async {
    final SPrefAppModel sPrefAppModel = getIt.get<SPrefAppModel>();
    final userName = sPrefAppModel.getUserName;
    Directory documentsDirectory = await getApplicationDocumentsDirectory();
    String path = join(documentsDirectory.path,userName,"$userName.db");
    _database = await openDatabase(path, version: 1, onOpen: (db) {},
        onCreate: (Database db, int version) async {
          await db.execute("CREATE TABLE ${TableConstants.household} ("
              "idho TEXT,"
              "idhO_TDT TEXT,"
              "iddb TEXT,"
              "thangDT INTEGER,"
              "namDT INTEGER,"
              "maTinh TEXT,"
              "maHuyen TEXT,"
              "maXa TEXT,"
              "maDiaBan TEXT,"
              "hoSo TEXT,"
              "tenChuHo TEXT,"
              "diaChi TEXT,"
              "tsKhau INTEGER,"
              "tsNu INTEGER,"
              "nhom INTEGER,"
              "hoDuPhong INTEGER,"
              "trangthai INTEGER,"
              "nguoiCapNhat TEXT,"
              "ngayCapNhat TEXT,"
              "ghiChu TEXT,"
              "nguoiTao TEXT,"
              "ngayTao TEXT,"
              "trangThai_BK INTEGER"
              ")");
          await db.execute("CREATE TABLE ${TableConstants.bangkeho_thangdt} ("
              "idhO_BKE TEXT,"
              "thangDT INTEGER,"
              "namDT INTEGER,"
              "trangThai INTEGER,"
              "sync INTEGER"
              ")");
          await db.execute("CREATE TABLE ${TableConstants.area} ("
              "id INTEGER,"
              "iddb TEXT,"
              "namDT INTEGER,"
              "thangDT INTEGER,"
              "maTinh TEXT,"
              "maHuyen TEXT,"
              "maXa TEXT,"
              "maDiaBan TEXT,"
              "ttnt INTEGER,"
              "tenDiaBan TEXT,"
              "trangThai INTEGER,"
              "nguoiCapNhat TEXT,"
              "ngayCapNhat TEXT,"
              "hoanThanh INTEGER,"
              "ghiChu TEXT,"
              "nguoiTao TEXT,"
              "ngayTao TEXT"
              ")");
          await db.execute("CREATE TABLE ${TableConstants.thongtinho} ("
              "idho TEXT,"
              "namDT INTEGER,"
              "maTinh TEXT,"
              "maHuyen TEXT,"
              "maXa TEXT,"
              "maDiaBan TEXT,"
              "hoSo TEXT,"
              "thangDT INTEGER,"
              "ttnt INTEGER,"
              "tenChuHo TEXT,"
              "diachi TEXT,"
              "maDTV TEXT,"
              "ngayKetThuc TEXT,"
              "ngayPhongVan TEXT,"
              "kinhDo INTEGER,"
              "viDo INTEGER,"
              "trangThai INTEGER,"
              "dienThoai TEXT,"
              "tsnk INTEGER,"
              "tsnu INTEGER,"
              "nK_15 INTEGER,"
              "nu_15 INTEGER,"
              "maNCC TEXT,"
              "duyetho INTEGER,"
              "nguoiTao TEXT,"
              "ngayTao TEXT,"
              "nguoiCapNhat TEXT,"
              "ngayCapNhat TEXT,"
              "thoiGianNhap TEXT,"
              "version TEXT"
              ")");
          await db.execute("CREATE TABLE ${TableConstants.thongtinhoNKTT} ("
              "idho TEXT,"
              "namDT INTEGER,"
              "q2 INTEGER,"
              "q2_New INTEGER,"
              "q3 INTEGER,"
              "q3_New INTEGER,"
              "q3A_New INTEGER,"
              "q3B_New INTEGER,"
              "q3C_New INTEGER,"
              "q3D_New INTEGER,"
              "q4A_New INTEGER,"
              "q4B_New INTEGER,"
              "q4C_New INTEGER,"
              "q4D_New INTEGER,"
              "q4E_New INTEGER,"
              "q4F_New INTEGER,"
              "q5 INTEGER,"
              "q5A_New INTEGER,"
              "q6 INTEGER,"
              "thangDT INTEGER"
              ")");
      await db.execute("CREATE TABLE ${TableConstants.thongTinThanhVienNKTT} ("
          "idho TEXT,"
          "idtv INTEGER,"
          "thangDT INTEGER,"
          "namDT INTEGER,"
          "q1 TEXT,"
          "q1_New TEXT,"
          "q2 INTEGER,"
          "q2_New INTEGER,"
          "q3 INTEGER,"
          "q3A_New INTEGER,"
          "q3B_New INTEGER,"
          "q3C_New INTEGER,"
          "q3D_New INTEGER,"
          "q4A_New INTEGER,"
          "q4B_New INTEGER,"
          "q4C_New INTEGER,"
          "q4D_New INTEGER,"
          "q4E_New INTEGER,"
          "q4F_New INTEGER,"
          "q5 INTEGER,"
          "q5_New INTEGER,"
          "q6_New INTEGER"
          ")");
        await db.execute("CREATE TABLE ${TableConstants.thongTinThanhVien} ("
            "idho TEXT,"
            "idtv INTEGER,"
            "stt TEXT,"
            "thangDT INTEGER,"
            "namDT INTEGER,"
            "c00 TEXT,"
            "c01 INTEGER,"
            "c01K TEXT,"
            "c02 INTEGER,"
            "c03A TEXT,"
            "c03B TEXT,"
            "c04 INTEGER,"
            "c04A INTEGER,"
            "c05 INTEGER,"
            "c06 TEXT,"
            "c07 INTEGER,"
            "c08 INTEGER,"
            "c09 INTEGER,"
            "c09A TEXT,"
            "c09B TEXT,"
            "c10 INTEGER,"
            "c10M INTEGER,"
            "c10_MK TEXT,"
            "c11 INTEGER,"
            "c12 INTEGER,"
            "c13 INTEGER,"
            "c14A INTEGER,"
            "c14B INTEGER,"
            "c14C INTEGER,"
            "c14D INTEGER,"
            "c14E INTEGER,"
            "c14F INTEGER,"
            "c15A TEXT,"
            "c15B TEXT,"
            "c15C INTEGER,"
            "c16A INTEGER,"
            "c16B INTEGER,"
            "c16C INTEGER,"
            "c17 INTEGER,"
            "c18 INTEGER,"
            "c19 INTEGER,"
            "c20 INTEGER,"
            "c21 INTEGER,"
            "c21K TEXT,"
            "c22 INTEGER,"
            "c23 INTEGER,"
            "c24 INTEGER,"
            "c25 INTEGER,"
            "c26 INTEGER,"
            "c27 INTEGER,"
            "c28 INTEGER,"
            "c29 INTEGER,"
            "c30 INTEGER,"
            "c30_A INTEGER,"
            "c30_B INTEGER,"
            "c30_C INTEGER,"
            "c30_D INTEGER,"
            "c30_E INTEGER,"
            "c30_F INTEGER,"
            "c30_G INTEGER,"
            "c30_H INTEGER,"
            "c30_I INTEGER,"
            "c30_IK TEXT,"
            "c30A INTEGER,"
            "c31 INTEGER,"
            "c31K TEXT,"
            "c32 INTEGER,"
            "c33 INTEGER,"
            "c33A INTEGER,"
            "c33AK TEXT,"
            "c34 TEXT,"
            "c35A TEXT,"
            "c35B TEXT,"
            "c36 TEXT,"
            "c37A TEXT,"
            "c37B TEXT,"
            "c38 INTEGER,"
            "c39 INTEGER,"
            "c40 INTEGER,"
            "c40A INTEGER,"
            "c41 INTEGER,"
            "c42 INTEGER,"
            "c43 INTEGER,"
            "c44 INTEGER,"
            "c45 INTEGER,"
            "c46 INTEGER,"
            "c47 INTEGER,"
            "c48 INTEGER,"
            "c49 TEXT,"
            "c50A TEXT,"
            "c50B TEXT,"
            "c51 TEXT,"
            "c52A TEXT,"
            "c52B TEXT,"
            "c53 INTEGER,"
            "c54 INTEGER,"
            "c55 INTEGER,"
            "c56 INTEGER,"
            "c57 INTEGER,"
            "c58 INTEGER,"
            "c59 INTEGER,"
            "c60 INTEGER,"
            "c61 INTEGER,"
            "c62 INTEGER,"
            "c63 INTEGER,"
            "c64 INTEGER,"
            "c65 INTEGER,"
            "c66 INTEGER,"
            "c67 INTEGER,"
            "c68 INTEGER,"
            "c69 INTEGER"
            ")");
          await db.execute("CREATE TABLE ${TableConstants.DoiSongHo} ("
              "idho TEXT,"
              "thangDT INTEGER,"
              "namDT INTEGER,"
              "c62_M1 INTEGER,"
              "c62_M2 INTEGER,"
              "c62_M3A INTEGER,"
              "c62_M3B INTEGER,"
              "c62_M3C INTEGER,"
              "c62_M3D INTEGER,"
              "c62_M3E INTEGER,"
              "c62_M3F INTEGER,"
              "c62_M3G INTEGER,"
              "c62_M3H INTEGER,"
              "c62_M3I INTEGER,"
              "c62_M3IK TEXT,"
              "c62_M4 INTEGER,"
              "c62_M5A INTEGER,"
              "c62_M5B INTEGER,"
              "c62_M5C INTEGER,"
              "c62_M5D INTEGER,"
              "c62_M5E INTEGER,"
              "c62_M5F INTEGER,"
              "c62_M5G INTEGER,"
              "c62_M5H INTEGER,"
              "c62_M5I INTEGER,"
              "c62_M5IK INTEGER,"
              "c62_M6 INTEGER,"
              "c62_M7A INTEGER,"
              "c62_M7B INTEGER,"
              "c62_M7C INTEGER,"
              "c62_M7D INTEGER,"
              "c62_M7E INTEGER,"
              "c62_M7F INTEGER,"
              "c62_M7FK INTEGER,"
              "c62_M8A INTEGER,"
              "c62_M8B INTEGER,"
              "c62_M8C INTEGER,"
              "c62_M8D INTEGER,"
              "c62_M8E INTEGER,"
              "c62_M8F INTEGER,"
              "c62_M8FK INTEGER,"
              "c62_M9A INTEGER,"
              "c62_M9B INTEGER,"
              "c62_M9C INTEGER,"
              "c62_M9D INTEGER,"
              "c62_M9E INTEGER,"
              "c62_M9EK TEXT"
              ")");
          await db.execute("CREATE TABLE ${TableConstants.DichVuTaiChinh} ("
              "idho TEXT,"
              "idtv INTEGER,"
              "thangDT INTEGER,"
              "namDT INTEGER,"
              "c85_A INTEGER,"
              "c85_B INTEGER,"
              "c85_C INTEGER,"
              "c85_D INTEGER,"
              "c85_E INTEGER,"
              "c85_F INTEGER,"
              "c85_G INTEGER,"
              "c85_H INTEGER,"
              "c85_I INTEGER,"
              "c86 INTEGER,"
              "c87 INTEGER,"
              "c88 INTEGER,"
              "c89_A INTEGER,"
              "c89_B INTEGER,"
              "c89_C INTEGER,"
              "c89_D INTEGER,"
              "c89_E INTEGER,"
              "c89_F INTEGER,"
              "c89_G INTEGER,"
              "c90_A INTEGER,"
              "c90_B INTEGER,"
              "c90_C INTEGER,"
              "c90_D INTEGER,"
              "c90_E INTEGER,"
              "c90_F INTEGER,"
              "c90_G INTEGER,"
              "c90_H INTEGER,"
              "c90_I INTEGER,"
              "c90_J INTEGER,"
              "c91_A INTEGER,"
              "c91_B INTEGER,"
              "c92 INTEGER,"
              "c93 TEXT,"
              "c93K TEXT,"
              "c94 TEXT,"
              "c94K TEXT,"
              "c95 INTEGER,"
              "c96 TEXT,"
              "c96K TEXT,"
              "c97_A INTEGER,"
              "c97_B INTEGER,"
              "c97_C INTEGER,"
              "c97_D INTEGER,"
              "c97_E INTEGER,"
              "c97_F INTEGER,"
              "c97_G INTEGER,"
              "c97_H INTEGER,"
              "c97_I INTEGER,"
              "c97_J INTEGER,"
              "c98_A INTEGER,"
              "c98_B INTEGER,"
              "c98_C INTEGER,"
              "c98_D INTEGER,"
              "c98_E INTEGER,"
              "c98_F INTEGER,"
              "c98_G INTEGER,"
              "c98_H INTEGER,"
              "c98_I INTEGER,"
              "c99 INTEGER"
              ")");
    });
  }


  Future deleteDatabase() async {
    final SPrefAppModel sPrefAppModel = getIt.get<SPrefAppModel>();
    final userName = sPrefAppModel.getUserName;
    Directory documentsDirectory = await getApplicationDocumentsDirectory();
    String path = join(documentsDirectory.path, userName,"$userName.db");
    await databaseFactory.deleteDatabase(path);
  }

}
